package com.gg.gpos.user.entity;

import java.time.LocalDate;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.Version;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

/**
 * Generated by Speed Generator
 * 
 * @author <a href="mailto:ngtrungkien@gmail.com">Kien Nguyen</a>
 */
@Getter
@Setter
@ToString(exclude = {"appGroups", "roles"})

@Entity
@Table(name = "app_user")
public class AppUser {

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Column(name = "\"id\"", nullable = false)
  private Long id;
  @Column(name = "\"account_expired\"", nullable = true)
  private boolean accountExpired;
  @Column(name = "\"account_locked\"", nullable = true)
  private boolean accountLocked;
  @Column(name = "\"credentials_expired\"", nullable = true)
  private boolean credentialsExpired;
  @Column(name = "\"account_enabled\"", nullable = true)
  private boolean accountEnabled;
  @Column(name = "\"username\"", nullable = false)
  private String username;
  @Column(name = "\"password\"", nullable = true)
  private String password;
  @Version
  @Column(name = "\"version\"", nullable = false)
  private Integer version;
  @Column(name = "\"user_level\"", nullable = true)
  private Integer userLevel;
  @Column(name = "\"created_by\"", nullable = true)
  private String createdBy;
  @Column(name = "\"created_date\"", nullable = true)
  private LocalDate createdDate;
  @Column(name = "\"modified_by\"", nullable = true)
  private String modifiedBy;
  @Column(name = "\"modified_date\"", nullable = true)
  private LocalDate modifiedDate;
  @Column(name = "\"password_changed_date\"", nullable = true)
  private LocalDate passwordChangedDate;
  @Column(name = "\"profile_id\"", nullable = true)
  private Long profileId;
  @Column(name = "\"profile_type\"", nullable = true)
  private String profileType;
  
  @ManyToMany(fetch = FetchType.LAZY)
  @JoinTable(name = "group_user", joinColumns = {
		  @JoinColumn(name = "user_id", nullable = false, updatable = false)},
		  inverseJoinColumns = {@JoinColumn(name = "group_id", nullable = false, updatable = false)})
  private List<AppGroup> appGroups;
  
  @ManyToMany(fetch = FetchType.LAZY)
  @JoinTable(name = "user_role", joinColumns = {
		  @JoinColumn(name = "user_id", nullable = false, updatable = false)},
		  inverseJoinColumns = {@JoinColumn(name = "role_id", nullable = false, updatable = false)})
  private List<Role> roles;

  
  // Transient
  @Transient
  private Staff staff;
  
  @PrePersist
  private void beforePersist() {
	  setAccountExpired(Boolean.FALSE.booleanValue());
	  setAccountLocked(Boolean.FALSE.booleanValue());
	  setCredentialsExpired(Boolean.FALSE.booleanValue());
	  setCreatedDate(LocalDate.now());
	  setModifiedDate(LocalDate.now());
  }
  
  @PreUpdate
  private void beforeUpdate() {
	  setModifiedDate(LocalDate.now());
  }
  
}