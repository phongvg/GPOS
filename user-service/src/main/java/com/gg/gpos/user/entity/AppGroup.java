package com.gg.gpos.user.entity;

import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

import lombok.Data;
import lombok.ToString;

/**
 * Generated by Speed Generator
 * 
 * @author <a href="mailto:ngtrungkien@gmail.com">Kien Nguyen</a>
 */
@Data
@ToString(exclude = {"appUsers", "roles"})

@Entity
@Table(name = "app_group")
public class AppGroup {

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Column(name = "\"id\"", nullable = false)
  private Long id;
  @Column(name = "\"name\"", nullable = false)
  private String name;
  @Column(name = "\"description\"", nullable = true)
  private String description;
  @Column(name = "\"enabled\"", nullable = true)
  private boolean enabled;
  @Column(name = "\"system_group\"", nullable = true)
  private Integer systemGroup;

  @ManyToMany(mappedBy = "appGroups")
  private List<AppUser> appUsers;
  
  @ManyToMany(cascade = CascadeType.MERGE,fetch = FetchType.LAZY)
  @JoinTable(name = "group_role", joinColumns = {
		  @JoinColumn(name = "group_id", nullable = false, updatable = false)},
		  inverseJoinColumns = {@JoinColumn(name = "role_id", nullable = false, updatable = false)})
  private List<Role> roles;

}