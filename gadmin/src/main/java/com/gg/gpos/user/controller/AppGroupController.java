package com.gg.gpos.user.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.gg.gpos.controller.BaseController;
import com.gg.gpos.user.dto.AppGroupDto;
import com.gg.gpos.user.dto.RoleDto;
import com.gg.gpos.user.manager.AppGroupManager;
import com.gg.gpos.user.manager.RoleManager;

import lombok.extern.slf4j.Slf4j;

/**
 * Generated by Speed Generator
 * 
 * @author <a href="mailto:ngtrungkien@gmail.com">Kien Nguyen</a>
 */
@Slf4j
@Controller
public class AppGroupController extends BaseController {
	@Autowired
    private AppGroupManager appGroupManager;

    @Autowired
    private RoleManager roleManager;


    @GetMapping("/system/group/list")
    public ModelAndView list() {
    	log.info("ENTERING 'LIST APP-GROUP' METHOD...");
		ModelAndView modelAndView = new ModelAndView("system/group-list");
		AppGroupDto criteria = new AppGroupDto();
		modelAndView.addObject("groups", appGroupManager.gets());
		modelAndView.addObject("criteria",criteria);
        return modelAndView;
    }

    @PostMapping("/system/group/list")
    public ModelAndView search(@Valid AppGroupDto criteria) {
    	log.info("ENTERING 'SEARCH APP-GROUP' METHOD...");
		ModelAndView modelAndView = new ModelAndView("system/group-list");
		modelAndView.addObject("groups", appGroupManager.gets(criteria));
		modelAndView.addObject("criteria",criteria);
        return modelAndView;
    }
    
    @GetMapping("/system/group/form*")
    public ModelAndView show(@RequestParam(name = "id", required = false) Long id) {
    	log.info("ENTERING 'SHOW APP-GROUP' METHOD...");
    	ModelAndView modelAndView = new ModelAndView("system/group-form");
    	List<RoleDto> roles = roleManager.gets();
    	roles.stream().forEach(r -> System.out.println(r.getName()));
    	AppGroupDto appGroupDto = new AppGroupDto();
		if (id != null) {
			appGroupDto = appGroupManager.get(id);
			List<RoleDto> selectedRoles = appGroupDto.getRoles();
			roles.stream().forEach(r ->	r.setSelected(selectedRoles.stream().anyMatch(s -> s.getId().equals(r.getId()))));
		} else {
			appGroupDto.setEnabled(Boolean.TRUE.booleanValue());
		}
		modelAndView.addObject("group",appGroupDto);
		modelAndView.addObject("roles", roles);
        return modelAndView;
    }

    @PostMapping("/system/group/save")
    public String save(@Valid AppGroupDto group, BindingResult bindingResult, HttpServletRequest request) {
    	log.info("ENTERING 'SAVE APP-GROUP' METHOD...");
        String view = "redirect:/system/group/list";
        if (bindingResult.hasErrors()) {
        	addError(request, bindingResult.getAllErrors().toString());
            return view;
        }
        try {
        	appGroupManager.save(group);
            addMessage(request, getText("group.updated", request.getLocale()));
		} catch (Exception e) {
			addError(request, e.getMessage());
		}
        return view;
    }
    
}