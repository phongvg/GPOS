package com.gg.gpos.menu.controller;

import java.util.Locale;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.gg.gpos.common.constant.ModelViewEnum;
import com.gg.gpos.controller.BaseController;
import com.gg.gpos.menu.dto.FeatureDto;
import com.gg.gpos.menu.manager.FeatureManager;

import lombok.extern.slf4j.Slf4j;

/**
 * Generated by Speed Generator
 * 
 * @author <a href="mailto:ngtrungkien@gmail.com">Kien Nguyen</a>
 */
 @Slf4j
@Controller
public class FeatureController extends BaseController {
	@Autowired
    private FeatureManager featureManager;
  
    @GetMapping("/ref/feature/list")
    public ModelAndView list() {
    	log.info("ENTERING 'LIST FEATURE' METHOD...");
		ModelAndView modelAndView = new ModelAndView("ref/feature-list");
		FeatureDto criteria = new FeatureDto();
		criteria.setPage(appProperties.getDefaultPage());
		criteria.setSize(appProperties.getDefaultPageSize());
		Page<FeatureDto> pages = featureManager.gets(criteria);
		modelAndView.addObject(ModelViewEnum.MODEL_PAGE.mav, pages);
		modelAndView.addObject(ModelViewEnum.MODEL_CRITERIA.mav,criteria);
        return modelAndView;
    }
    
    @PostMapping("/ref/feature/list")
    public ModelAndView search(Model model,@Valid FeatureDto criteria, BindingResult bindingResult){
    	log.info("ENTERING 'SEARCH FEATURE' METHOD...");
		ModelAndView modelAndView = new ModelAndView("ref/feature-list");
		if(criteria != null && criteria.getSize() == null) {
			criteria.setPage(appProperties.getDefaultPage());
			criteria.setSize(appProperties.getDefaultPageSize());
		}
		Page<FeatureDto> pages = featureManager.gets(criteria);
		modelAndView.addObject(ModelViewEnum.MODEL_PAGE.mav, pages);
		modelAndView.addObject(ModelViewEnum.MODEL_CRITERIA.mav,criteria);
        return modelAndView;
    }
    
    @GetMapping("/ref/feature/form")
    public ModelAndView show(@RequestParam(value="id",required = false)Long id) {
    	log.info("ENTERING 'SHOW FEATURE' METHOD...");
		ModelAndView modelAndView = new ModelAndView("ref/feature-form");
		FeatureDto feature = new FeatureDto();
		if(id != null) {
			feature = featureManager.get(id);
		}
		modelAndView.addObject("feature",feature);
        return modelAndView;
    }
    
    @PostMapping("/ref/feature/save")
    public String save(@Valid FeatureDto featureDto,BindingResult bindingResult,HttpServletRequest request) {
    	log.info("ENTERING 'SAVE FEATURE' METHOD...");
    	Locale locale = request.getLocale();
    	String view = "redirect:/ref/feature/form";
    	try {
    		if(featureManager.isUsedCode(featureDto) || featureDto.getId() != null) {
        		featureManager.save(featureDto);
        		addMessage(request, getText("feature.updated", locale));
        		view = "redirect:/ref/feature/list";
    		}else {
        		addError(request,getText("feature.error",request.getLocale()));
        	}
    	} catch (Exception e) {
			addError(request, e.getMessage());
			log.error("ERROR SAVE FEATURE: EXCEPTION: {}", e);
		}
        return view;
    }
    
    @GetMapping("/ref/feature/del/{id}")
    public ModelAndView del(@PathVariable(value="id", required=true) Long id, HttpServletRequest request) {
    	log.info("ENTERING 'DELETE FEATURE' METHOD...");
    	ModelAndView modelAndView = new ModelAndView("redirect:/ref/feature/list");
    	if (id != null) {
    		// Không cho phép xóa Feature mà chỉ chuyển trạng thái về 0 (Inactive)
    		featureManager.changeStatus(id);
    		addMessage(request, getText("feature.delete.success",request.getLocale()));
    	}else {
    		addError(request, getText("feature.delete.fail",request.getLocale()));
    	}
    	return modelAndView;
    }
}