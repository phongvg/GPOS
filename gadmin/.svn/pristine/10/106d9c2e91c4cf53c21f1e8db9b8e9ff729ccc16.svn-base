package com.gg.gpos.menu.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.ModelAndView;

import com.gg.gpos.common.constant.ModelViewEnum;
import com.gg.gpos.common.constant.ReferenceDataEnum;
import com.gg.gpos.common.constant.SystemParamEnum;
import com.gg.gpos.controller.BaseController;
import com.gg.gpos.integration.manager.MasterDataSyncManager;
import com.gg.gpos.integration.manager.SyncManager;
import com.gg.gpos.menu.dto.FoodItemDto;
import com.gg.gpos.menu.manager.FoodItemManager;
import com.gg.gpos.reference.dto.SystemParameterDto;
import com.gg.gpos.res.dto.RestaurantDto;
import com.gg.gpos.res.manager.SyncStatusManager;

import lombok.extern.slf4j.Slf4j;

/**
 * Generated by Speed Generator
 * 
 * @author <a href="mailto:ngtrungkien@gmail.com">Kien Nguyen</a>
 */
 @Slf4j
@Controller
public class FoodItemController extends BaseController {
	@Autowired
    private FoodItemManager foodItemManager;
    @Autowired
    private MasterDataSyncManager masterDataSyncManager;
    @Autowired
    private SyncStatusManager syncStatusManager;
    @Autowired
    private SyncManager syncManager;
  
    
    @GetMapping("/ref/foodItem/list")
    public ModelAndView list() {
    	log.info("ENTERING 'LIST FOOD-ITEM' METHOD...");
    	ModelAndView modelAndView = new ModelAndView("ref/food-item-list");
    	FoodItemDto criteria = new FoodItemDto();
    	criteria.setPage(appProperties.getDefaultPage());
    	criteria.setSize(appProperties.getDefaultPageSize());
    	modelAndView.addObject(ModelViewEnum.MODEL_PAGE.mav,foodItemManager.gets(criteria));
    	modelAndView.addObject(ModelViewEnum.MODEL_CRITERIA.mav,criteria);
    	return modelAndView;
    }
    
    @PostMapping("/ref/foodItem/list")
    public ModelAndView search(@Valid FoodItemDto criteria) {
    	log.info("ENTERING 'SEARCH FOOD-ITEM' METHOD...");
    	ModelAndView modelAndView = new ModelAndView("ref/food-item-list");
    	if(criteria != null && criteria.getSize() == null) {
    		criteria.setPage(appProperties.getDefaultPage());
    		criteria.setSize(appProperties.getDefaultPageSize());
    	}
    	modelAndView.addObject(ModelViewEnum.MODEL_PAGE.mav, foodItemManager.gets(criteria));
    	modelAndView.addObject(ModelViewEnum.MODEL_CRITERIA.mav,criteria);
    	return modelAndView;
    }
    
    /*
     * Đồng bộ thông tin từ RK7
     */
    @GetMapping("/foodItem/sync-from-rk7")
    public String syncFromRK7(Model model, HttpServletRequest request) {
    	log.info("ENTERING 'SYNC FOOD-ITEM FROM RK7' METHOD...");
    	try {
    		SystemParameterDto rk7UrlParam = systemParameterManager.get(SystemParamEnum.RK7_URL.param);
        	SystemParameterDto rk7BasicAuthParam = systemParameterManager.get(SystemParamEnum.RK7_BASIC_AUTH.param);
        	List<FoodItemDto> foodItemsDtos = masterDataSyncManager.syncMenuItemFromRK7(rk7UrlParam.getParamValue(), rk7BasicAuthParam.getParamValue());
        	foodItemManager.save(foodItemsDtos);
        	syncStatusManager.changeSttAfterSync();
        	addMessage(request, getText("foodItem.sync.from.rk7.success", request.getLocale()));
		} catch (Exception e) {
			addError(request, e.getMessage());
			log.error("SYNC FOOD_ITEM FROM RK7 EXCEPTION: {}", e);
		}
    	return "redirect:/ref/foodItem/list";
    }    
    
    /*
     * Đồng bộ DỮ LIỆU MASTER_DATA từ NHÀ HÀNG xuống SERVER NHÀ HÀNG
     * Có thể chọn nhiều nhà hàng để đồng bộ
     */
    @GetMapping("/foodItem/sync-to-res")
    public String syncToRestaurant(Model model, HttpServletRequest request) {
    	log.info("ENTERING 'SYNC FOOD-ITEM TO RESTAURANT' METHOD...");
		// Lấy danh sách nhà hàng đã chọn để đồng bộ
		List<RestaurantDto> restaurantDtos = restaurantManager.gets();
		syncManager.savedSyncMasterData(restaurantDtos, ReferenceDataEnum.FOOD_ITEM.key);
    	addMessage(request, getText("apply.to.restaurant.sucess", request.getLocale()));
    	return "redirect:/ref/foodItem/list";
	}
    
}