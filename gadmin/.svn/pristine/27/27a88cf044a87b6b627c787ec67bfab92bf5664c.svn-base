package com.gg.gpos.menu.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.gg.gpos.common.constant.ModelViewEnum;
import com.gg.gpos.controller.BaseController;
import com.gg.gpos.menu.dto.FoodGroupDto;
import com.gg.gpos.menu.manager.FoodGroupManager;

import lombok.extern.slf4j.Slf4j;

/**
 * Generated by Speed Generator
 * 
 * @author <a href="mailto:ngtrungkien@gmail.com">Kien Nguyen</a>
 */
 @Slf4j
@Controller
public class FoodGroupController extends BaseController {
	@Autowired
    private FoodGroupManager foodGroupManager;
	
    @GetMapping("/ref/foodGroup/list")
	    public ModelAndView refList() {
    	log.debug("entering 'refList' method...");
    	ModelAndView modelAndView = new ModelAndView("ref-foodGroup-list");
    	FoodGroupDto criteria = new FoodGroupDto();
    	
    	criteria.setPage(appProperties.getDefaultPage());
    	criteria.setSize(appProperties.getDefaultPageSize());
    	modelAndView.addObject("page", foodGroupManager.gets(criteria));
    	
    	return modelAndView;
    }
    
    @PostMapping("/ref/foodGroup/list")
    public ModelAndView searchFoodGroup(@Valid FoodGroupDto criteria, BindingResult bindingResult) {
    	log.debug("entering 'search' method...");
    	
    	ModelAndView modelAndView = new ModelAndView("ref-foodGroup-list");
    	
		if (criteria != null && criteria.getSize() == null) {
			criteria.setPage(appProperties.getDefaultPage());
			criteria.setSize(appProperties.getDefaultPageSize());
		}
		modelAndView.addObject("page", foodGroupManager.gets(criteria));

        return modelAndView;
    }
    
    @GetMapping("/foodGroup/list")
    public ModelAndView list(@RequestParam(value="rId", required=true) Long rId) {
    	log.debug("entering 'list' method...");
    	
		ModelAndView modelAndView = new ModelAndView("foodGroup-list");
		
		FoodGroupDto criteria = new FoodGroupDto();
		criteria.setPage(appProperties.getDefaultPage());
		criteria.setSize(appProperties.getDefaultPageSize());
		modelAndView.addObject(ModelViewEnum.MODEL_PAGE.mav, foodGroupManager.gets(criteria));
		modelAndView.addObject(ModelViewEnum.MODEL_CRITERIA.mav, criteria);

        return modelAndView;
    }
    
    @PostMapping("/foodGroup/list")
    public ModelAndView search(@Valid FoodGroupDto criteria, BindingResult bindingResult) {
    	log.debug("entering 'search' method...");
    	
    	ModelAndView modelAndView = new ModelAndView("foodGroup-list");
    	
		if (criteria.getSize() == null) {
			criteria.setPage(appProperties.getDefaultPage());
			criteria.setSize(appProperties.getDefaultPageSize());
		}
		modelAndView.addObject(ModelViewEnum.MODEL_PAGE.mav, foodGroupManager.gets(criteria));
		modelAndView.addObject(ModelViewEnum.MODEL_CRITERIA.mav, criteria);

        return modelAndView;
    }
    

    
}