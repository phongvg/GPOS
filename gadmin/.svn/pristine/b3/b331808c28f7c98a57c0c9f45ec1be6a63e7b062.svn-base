package com.gg.gpos.reference.controller;

import java.util.Locale;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.gg.gpos.controller.BaseController;
import com.gg.gpos.reference.dto.SystemParameterDto;
import com.gg.gpos.reference.manager.SystemParameterManager;

import lombok.extern.slf4j.Slf4j;

/**
 * Generated by Speed Generator
 * 
 * @author <a href="mailto:ngtrungkien@gmail.com">Kien Nguyen</a>
 */
 @Slf4j
@Controller
public class SystemParameterController extends BaseController {

	@Autowired
    private SystemParameterManager systemParameterManager;

    @GetMapping("/system/systemParameter/list")
    public ModelAndView list(HttpServletRequest request) {
    	log.info("ENTERING 'LIST SYSTEM-PARAMETER' METHOD...");
		ModelAndView modelAndView = new ModelAndView("system/system-parameter-list");
		SystemParameterDto criteria = new SystemParameterDto();
		criteria.setPage(appProperties.getDefaultPage());
		criteria.setSize(appProperties.getDefaultPageSize());
		Page<SystemParameterDto> pages = systemParameterManager.gets(criteria);
		modelAndView.addObject("page", pages);
		modelAndView.addObject("criteria",criteria);
        return modelAndView;
    }
    
    @PostMapping("/system/systemParameter/list")
    public ModelAndView search(Model model, @Valid SystemParameterDto criteria){
    	log.info("ENTERING 'SEARCH SYSTEM-PARAMETER' METHOD...");
    	ModelAndView modelAndView = new ModelAndView("system/system-parameter-list");
		if(criteria != null && criteria.getSize() == null) {
			criteria.setPage(appProperties.getDefaultPage());
			criteria.setSize(appProperties.getDefaultPageSize());
		}
		Page<SystemParameterDto> pages = systemParameterManager.gets(criteria);
		modelAndView.addObject("page", pages);
		modelAndView.addObject("criteria",criteria);
        return modelAndView;
    }
    
    @GetMapping("/system/systemParameter/form")
    public ModelAndView show(@RequestParam(name = "id", required = true) Long id) {
    	log.info("ENTERING 'SHOW SYSTEM-PARAMETER' METHOD...");
    	ModelAndView modelAndView = new ModelAndView("system/system-parameter-form");
        modelAndView.addObject("systemParameter", systemParameterManager.get(id));
        return modelAndView;
    }

    @PostMapping("/system/systemParameter/save")
    public String save(@Valid SystemParameterDto systemParameterDto, BindingResult bindingResult, HttpServletRequest request) {
        log.info("ENTERING 'SAVE SYSTEM-PARAMETER' METHOD...");
        Locale locale = request.getLocale();
        String view = "redirect:/system/systemParameter/list";
        if (bindingResult.hasErrors()) {
        	addError(request, bindingResult.getAllErrors().toString());
            return view;
        }
        try {
        	systemParameterManager.save(systemParameterDto);
            addMessage(request, getText("systemParameter.updated", locale));
		} catch (Exception e) {
			addError(request, e.getMessage());
        	log.error("ERROR SAVE SYSTEM-PARAMETER: {}", e);
		}
        return view;
    }
    
}