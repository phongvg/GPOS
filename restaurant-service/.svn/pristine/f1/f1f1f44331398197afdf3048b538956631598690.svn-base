package com.gg.gpos.res.repository;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.gg.gpos.res.entity.Restaurant;

/**
 * Generated by Speed Generator
 * 
 * @author <a href="mailto:ngtrungkien@gmail.com">Kien Nguyen</a>
 */
@Repository
public interface RestaurantRepository extends JpaRepository<Restaurant, Long>, JpaSpecificationExecutor<Restaurant> {
	Restaurant findByCode(Integer code);
	Long countByStatus(Integer status);
	Long countByOnline(Integer status);
	List<Restaurant> findByCodeIn(List<Integer> resCodes);
	List<Restaurant> findByCodeOrNameContainingAndStatus(Integer code,String name,Integer status);
	List<Restaurant> findByNameContainingAndStatus(String name, Integer status);
	List<Restaurant> findByCodeOrUnsignedNameContainingAndStatus(Integer code,String name,Integer status);
	List<Restaurant> findByUnsignedNameContainingAndStatus(String name, Integer status);
	@Query("from Restaurant r where r.provinceBrand.brand.id = (select b.id from ProvinceBrand pb inner join pb.brand b inner join pb.restaurants rs where rs.code = :resCode) and r.code != :resCode")
	List<Restaurant> findRelatedRestaurants(@Param("resCode") Integer resCode);
	List<Restaurant> findByStatus(Integer status);
}