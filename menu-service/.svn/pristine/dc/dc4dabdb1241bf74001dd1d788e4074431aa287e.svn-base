package com.gg.gpos.menu.repository;

import java.util.List;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import com.gg.gpos.menu.entity.Kds;
import com.gg.gpos.menu.entity.PrintGroup;

/**
 * Generated by Speed Generator
 * 
 * @author <a href="mailto:ngtrungkien@gmail.com">Kien Nguyen</a>
 */
@Repository
public interface PrintGroupRepository extends JpaRepository<PrintGroup, Long>, JpaSpecificationExecutor<PrintGroup> {
	List<PrintGroup> findByKdsAndRestaurantCodeIsNull(Kds kds);
	PrintGroup findByIdAndKds(Long id, Kds kds);
	Page<PrintGroup> findByKdsAndRestaurantCodeIsNull(Kds kds, Pageable pageable);
	List<PrintGroup> findByKdsAndRestaurantCode(Kds kds, Integer restaurantCode);
	Page<PrintGroup> findByRestaurantCode(Integer restaurantCode, Pageable pageable);
	List<PrintGroup> findByRestaurantCode(Integer restaurantCode);
	List<PrintGroup> findByRestaurantCodeAndKdsIsNotNull(Integer restaurantCode);
	@Query("select distinct pg.restaurantCode from PrintGroup pg where pg.kds.id = :kdsId and pg.restaurantCode is not null")
	List<Integer> findRestaurantCodes(@Param("kdsId") Long kdsId);
	void deleteByRestaurantCode(Integer restaurantCode);
	void deleteByRestaurantCodeAndKdsIsNotNull(Integer restaurantCode);
	PrintGroup findByCodeAndRestaurantCode(String code, Integer resCode);
}