package com.gg.gpos.menu.manager;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.gg.gpos.menu.dto.FoodGroupItemDto;
import com.gg.gpos.menu.entity.FoodGroup;
import com.gg.gpos.menu.entity.FoodGroupItem;
import com.gg.gpos.menu.entity.FoodItem;
import com.gg.gpos.menu.mapper.FoodGroupItemMapper;
import com.gg.gpos.menu.mapper.FoodGroupMapper;
import com.gg.gpos.menu.mapper.FoodItemMapper;
import com.gg.gpos.menu.repository.FoodGroupItemRepository;

import lombok.extern.slf4j.Slf4j;
/**
 * Generated by Speed Generator
 * 
 * @author <a href="mailto:ngtrungkien@gmail.com">Kien Nguyen</a>
 */
@Slf4j
@Service
@Transactional
public class FoodGroupItemManager {
	
	@Autowired
	private FoodGroupItemRepository foodGroupItemRepository;
	@Autowired
	private FoodGroupItemMapper foodGroupItemMapper;
	@Autowired
	private FoodGroupMapper foodGroupMapper;
	@Autowired
	private FoodItemMapper foodItemMapper;
	
	
	public FoodGroupItemDto save(FoodGroupItemDto foodGroupItemDto) {
		log.debug("Entering 'save' method...");
		FoodGroupItem foodGroupItem = Optional.ofNullable(foodGroupItemDto).map(foodGroupItemMapper::dtoToEntity).orElse(null);
		if(foodGroupItem != null) {
			return Optional.ofNullable(foodGroupItemRepository.save(foodGroupItem)).map(foodGroupItemMapper::entityToDto).orElse(null);
		} else {
			return null;
		}
		
	}

	public List<FoodGroupItemDto> getByFoodGroupId(Long fgId){
		return foodGroupItemRepository.findByFoodGroupId(fgId).stream().map(foodGroupItemMapper::entityToDto).collect(Collectors.toList());
	}
	
	public FoodGroupItemDto getByFoodGroupAndFoodItemCode(Long fgId,String foodItemCode ){
		return Optional.ofNullable(foodGroupItemRepository.findByFoodGroupAndFoodItemCode(fgId,foodItemCode)).map(foodGroupItemMapper::entityToDto).orElse(null);
	}
	
	public FoodGroupItemDto saveFGI(FoodGroupItemDto foodGroupItemDto) {
		FoodGroup foodGroup = Optional.ofNullable(foodGroupItemDto.getFoodGroup()).map(foodGroupMapper::dtoToEntity).orElse(null);
		FoodItem foodItem = Optional.ofNullable(foodGroupItemDto.getFoodItem()).map(foodItemMapper::dtoToEntity).orElse(null);
		FoodGroupItem foodGroupItem = Optional.ofNullable(foodGroupItemDto).map(foodGroupItemMapper::dtoToEntity).orElse(null);
		if(foodGroupItem != null) {
			foodGroupItem.setFoodGroup(foodGroup);
			foodGroupItem.setFoodItem(foodItem);
			return Optional.ofNullable(foodGroupItemRepository.save(foodGroupItem)).map(foodGroupItemMapper::entityToDto).orElse(null);
		} else {
			return null;
		}
		
	}
}
