package com.gg.gpos.menu.manager;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.stereotype.Service;

import com.gg.gpos.menu.dto.CategoryDto;
import com.gg.gpos.menu.entity.Category;
import com.gg.gpos.menu.mapper.CategoryMapper;
import com.gg.gpos.menu.repository.CategoryRepository;
import com.gg.gpos.menu.specification.ReferenceObjectSpecification;

import lombok.extern.slf4j.Slf4j;

/**
 * Generated by Speed Generator
 * 
 * @author <a href="mailto:ngtrungkien@gmail.com">Kien Nguyen</a>
 */
@Slf4j
@Service
@Transactional
public class CategoryManager {
	@Autowired
	private CategoryRepository categoryRepository;
	@Autowired
	private CategoryMapper categoryMapper;
	@Autowired
	private ReferenceObjectSpecification<Category> referenceObjectSpecification;
	
	public void save(List<CategoryDto> categoryDtos) {
		log.debug("PROCESS: SAVE CATEGORY, CATEGORIES: {}", categoryDtos);
		if (!categoryDtos.isEmpty()) {
			categoryDtos.stream().forEach(f -> {
				Category category = Optional.ofNullable(f).map(categoryMapper::dtoToEntity).orElse(null);
				if (category != null) {
					categoryRepository.save(category);
				}
			});
		}
	}
	
	public Page<CategoryDto> gets(CategoryDto criteria){
		log.debug("PROCESS: GETS CATEGORY, CATEGORY: {}", criteria);
		Specification<Category> spec = Specification.where(referenceObjectSpecification.search(criteria.getCode(), criteria.getName(), criteria.getStatus()));
		Page<Category> page = categoryRepository.findAll(spec, PageRequest.of(criteria.getPage(), criteria.getSize()));
		return new PageImpl<>(page.getContent().stream().map(categoryMapper::entityToDto).collect(Collectors.toList()),PageRequest.of(criteria.getPage(), criteria.getSize()), page.getTotalElements());
	}
}