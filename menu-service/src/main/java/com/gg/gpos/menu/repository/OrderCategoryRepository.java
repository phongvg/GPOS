package com.gg.gpos.menu.repository;

import java.util.List;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import com.gg.gpos.menu.entity.OrderCategory;

/**
 * Generated by Speed Generator
 * 
 * @author <a href="mailto:ngtrungkien@gmail.com">Kien Nguyen</a>
 */
@Repository
public interface OrderCategoryRepository extends JpaRepository<OrderCategory, Long>, JpaSpecificationExecutor<OrderCategory> {
	@Query("from OrderCategory oc where oc.status=3 and oc.code=:code")
	OrderCategory findByCode(String code);
	List<OrderCategory> findByStatusOrderByNameAsc(int status);
	@Query("from OrderCategory oc where oc.id not in (select oc2.id from SoCategory sc inner join sc.orderCategory oc2 inner join sc.so so where so.id = :soId) and oc.status=3 order by oc.name asc")
	List<OrderCategory> filterNotInSo(Long soId);
	@Query("from OrderCategory oc where oc.id not in (select oc2.id from SoCategory sc inner join sc.orderCategory oc2 where sc.restaurantCode = :resCode) and oc.status=3 order by oc.name asc")
	List<OrderCategory> filterNotInRestaurant(Integer resCode);
	@Query("from OrderCategory oc where oc.status=3")
	List<OrderCategory> findActives();
	@Query("from OrderCategory oc inner join oc.soCategories sc inner join sc.soCategoryFoodGroups scfg inner join scfg.foodGroup fg where fg.code = :foodGroupCode and oc.status = 3 and fg.restaurantCode is null")
	OrderCategory findByFoodGroupCode(@Param("foodGroupCode")String foodGroupCode);
	
}