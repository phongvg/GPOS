//package com.gg.gpos.integration.jms;
//
//import java.util.List;
//import java.util.Map;
//import java.util.Set;
//import java.util.stream.Collectors;
//
//import javax.transaction.Transactional;
//
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.jms.annotation.JmsListener;
//import org.springframework.stereotype.Component;
//import org.springframework.util.CollectionUtils;
//import org.springframework.util.StringUtils;
//
//import com.fasterxml.jackson.core.JsonProcessingException;
//import com.gg.gpos.common.constant.ResultEnum;
//import com.gg.gpos.common.constant.SymbolEnum;
//import com.gg.gpos.common.constant.SystemParamEnum;
//import com.gg.gpos.common.constant.TypeDataEnum;
//import com.gg.gpos.common.json.FileContent;
//import com.gg.gpos.common.json.RestaurantMenuDataSync;
//import com.gg.gpos.integration.dto.QueueDto;
//import com.gg.gpos.integration.manager.RestaurantSyncManager;
//import com.gg.gpos.integration.manager.SyncArchiveManager;
//import com.gg.gpos.integration.manager.SyncManager;
//import com.gg.gpos.menu.manager.SyncAttachmentFileManager;
//import com.gg.gpos.reference.manager.SystemParameterManager;
//import com.gg.gpos.res.dto.RestaurantDto;
//import com.gg.gpos.res.manager.RestaurantManager;
//
//import lombok.extern.slf4j.Slf4j;
//
//@Slf4j
//@Component
//@Transactional
//public class MessageSyncFileAttachmentToRestaurantReceiver {
//	@Autowired
//	private SyncManager syncManager;
//    @Autowired
//	private SyncArchiveManager syncArchiveManager;
//    @Autowired
//	private RestaurantSyncManager restaurantSyncManager;
//	@Autowired
//	private SystemParameterManager systemParameterManager;
//	@Autowired
//	private RestaurantManager restaurantManager;
//	@Autowired
//    private MessageFileSender messageFileSender;
//	@Autowired
//	private SyncAttachmentFileManager syncAttachmentFileManager;
//	
//	private static final String QUEUE_SYNC_FILE_ATTACHMENT = "queue-sync-file-attachment";
//	
//	/*
//	 * QUEUE đồng bộ từ danh mục FILE_ATTACHMENT xuống SERVER NHÀ HÀNG
//	 */
//	@JmsListener(destination = QUEUE_SYNC_FILE_ATTACHMENT)
//    public void listener(final QueueDto queueDto){
//    	log.debug("PROCESS LISTENER: QUEUE SYNC FILE_ATTACHMENT TO RESTAURANT, QUEUE_DTO: {}", queueDto);
//    	try {
//    		
//    		Set<String> keys = StringUtils.commaDelimitedListToSet(queueDto.getSelectedRestaurantCodes());
//        	// Danh sách các mã nhà hàng được chọn để đồng bộ dữ liệu
//    		List<String> resCodes = keys.stream().filter(key -> {
//        		return !key.contains(SymbolEnum.UNDERSCORE.val);
//        	}).collect(Collectors.toList());
//    		
//    		// Một số biến cần dùng
//			String typeData = TypeDataEnum.FILE_DATA.val;
//    		
//        	// lấy danh sách nhà hàng đã chọn
//        	List<RestaurantDto> restaurantDtos = restaurantManager.getRestaurantByRestaurantCodes(resCodes);
//        	// Lấy thông tin một số API_URL
//        	String gatewayUrl = systemParameterManager.get(SystemParamEnum.API_GATEWAY_URL.param).getParamValue();
//	    	Map<String, String> urls = systemParameterManager.gets(SystemParamEnum.API_BUSINESS_PREFIX.param); 
//	    	String apiUrlFile = gatewayUrl + urls.get(SystemParamEnum.API_BUSINESS_FILESAVE_PATTERN.param); 
//	    	String checkOffOnlineRestaurantUrl = gatewayUrl + urls.get(SystemParamEnum.API_BUSINESS_CHECK_STATUS_RESTAURANT_PATTERN.param); 
//			if(!CollectionUtils.isEmpty(restaurantDtos)) {
//				// Lưu thông tin đánh dấu trạng thái đang được đồng bộ
//				syncManager.saveSyncFileAttachments(restaurantDtos);
//						
//				restaurantDtos.stream().forEach(restaurantDto ->{
//					Integer restaurantCode = restaurantDto.getCode();
//					String restaurantName = restaurantDto.getName();
//					if(restaurantDto.getIp() != null && restaurantDto.getPort() != null) {
//						// trường hợp CÓ thông tin nhà hàng thì kiểm tra xem server của nhà hàng co online không
//						if(checkOnlineRestaurant(checkOffOnlineRestaurantUrl, restaurantCode)) {
//							// Thực hiện đồng bộ thông tin xuống nhà hàng trước sau đó mới gửi thông tin đã đồng bộ từ DANH MỤC -> NHÀ HÀNG đến SERVER của NHÀ HÀNG
//							RestaurantMenuDataSync restaurantMenuDataSync = syncAttachmentFileManager.convertFileAttachmentToJosn(restaurantCode, apiUrlFile);
//							// Gửi ảnh vào QUEUE
//							if(!CollectionUtils.isEmpty(restaurantMenuDataSync.getFileContents())) {
//				        		List<FileContent> fileContents = restaurantMenuDataSync.getFileContents();
//				        		messageFileSender.publish(fileContents);     		
//							} else {
//								// Xóa thông tin "CÁC TIẾN TRÌNH ĐANG ĐỒNG BỘ"
//						    	syncManager.deleteDataFileAttachmentAfterSync(restaurantCode);
//							}
//						} else {
//							// trường hợp không có thông tin nhà hàng thì lưu lại vào bảng "thông tin danh sách đồng bộ"
//    						syncArchiveManager.saveWithStatusFail(restaurantCode, restaurantName, typeData, ResultEnum.RESTAURANT_OFFLINE.val);
//						}
//					} else {
//						// trường hợp không có thông tin nhà hàng thì lưu lại vào bảng "thông tin danh sách đồng bộ"
//						syncArchiveManager.saveWithStatusFail(restaurantCode, restaurantName, typeData, ResultEnum.NOT_IP_OR_NOT_PORT.val);
//					}
//				});
//			}
//		} catch (Exception e) {
//			log.error("PROCESS LISTENER: QUEUE SYNC FILE_ATTACHMENT TO RESTAURANT EXCEPTION: {}", e);
//		}
//    }
//	
//	private boolean checkOnlineRestaurant(String apiUrl, Integer resCode) {
//    	log.debug("PROCESS FUNCTION: CHECK OFF/ONLINE RESTAURANT");    
//    	boolean check;
//    	try {
//    		check = restaurantSyncManager.check(apiUrl,resCode);
//		} catch (JsonProcessingException e) {
//			check = false;
//			e.printStackTrace();
//		}
//    	return check;
//    }
//}
