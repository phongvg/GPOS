package com.gg.gpos.integration.jms;

import java.io.Serializable;
import java.util.Set;

import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.ObjectMessage;
import javax.jms.Session;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jms.JmsException;
import org.springframework.jms.annotation.JmsListener;
import org.springframework.jms.core.JmsTemplate;
import org.springframework.jms.core.MessageCreator;
import org.springframework.jms.support.converter.MessageConversionException;
import org.springframework.jms.support.converter.SimpleMessageConverter;
import org.springframework.stereotype.Component;

import com.gg.gpos.integration.dto.FileRestaurantQueue;

import lombok.extern.slf4j.Slf4j;
@Slf4j
@Component
public class MessageReceiverRestaurant {
	
	private static final String QUEUE_SEND_LIST_RESCODE = "queue-send-list-restaurant-code";
	private final SimpleMessageConverter converter = new SimpleMessageConverter();
	
	@Autowired
    private JmsTemplate jmsTemplate;
	
	
	@SuppressWarnings("unchecked")
	@JmsListener(destination = QUEUE_SEND_LIST_RESCODE)
    public void listener(final Message resCodes) throws MessageConversionException, JMSException{
    	log.info("Entering listener Message ResCodes() ...");
    	Set<FileRestaurantQueue> restaurantCodes = (Set<FileRestaurantQueue>)converter.fromMessage(resCodes);	
    	
		try {
			jmsTemplate.send(resCodes.getJMSReplyTo(),new MessageCreator() {
				@Override
				public Message createMessage(Session session) throws JMSException {
					ObjectMessage message = session.createObjectMessage((Serializable) restaurantCodes);
					message.setJMSCorrelationID(resCodes.getJMSCorrelationID());
					return message;
				}
			});
			} catch (JmsException e) {
				e.printStackTrace();
			} catch (JMSException e) {
				e.printStackTrace();
			}
 	}
        
}
